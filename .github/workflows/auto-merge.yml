name: Auto Merge

on:
  pull_request_target:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
  pull_request_review:
    types:
      - submitted
  check_suite:
    types:
      - completed
  status: {}

jobs:
  automerge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Ensure PR is mergeable
        id: mergeable
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          pr_details=$(gh pr view ${{ github.event.pull_request.number }} --json mergeable --jq .mergeable)
          echo "Mergeable state: $pr_details"
          
          if [ "$pr_details" != "MERGEABLE" ]; then
            echo "PR is not mergeable."
            exit 1
          fi

      - name: Ensure All Checks and Approvals
        id: checks_and_approvals
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const approvedReviews = reviews.filter(r => r.state === "APPROVED");
            const requiredApprovals = 1; // Adjust as needed
            if (approvedReviews.length < requiredApprovals) {
              core.setFailed(`PR requires at least ${requiredApprovals} approval(s).`);
              return;
            }

            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request.head.sha
            });

            const failingChecks = checks.check_runs.filter(c => c.conclusion !== "success");
            if (failingChecks.length > 0) {
              core.setFailed("Not all checks are successful.");
              return;
            }

            console.log("All required checks and approvals are complete.");

      - name: Merge PR
        if: steps.checks_and_approvals.outcome == 'success'
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              merge_method: "squash",
              commit_title: "Auto-merged by GitHub Actions"
            });
